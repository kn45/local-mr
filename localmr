#!/bin/sh

mrlog()
{
  fmt="["`date +"%Y-%m-%d %H:%M:%S"`"]"
  (>&2 echo $fmt" "$1)
}

for i in "$@"; do
case $i in
  -i=*|--input=*)
  INPUT="${i#*=} "$INPUT
  ;;
  -o=*|--output=*)
  OUTPUT="${i#*=}"
  ;;
  -m=*|--mapper=*)
  MAPPER="${i#*=}"
  ;;
  -a=*|--nmapper=*|--nmap=*)
  NMAP="${i#*=}"
  ;;
  -r=*|--reducer=*)
  REDUCER="${i#*=}"
  ;;
  -b=*|--nreducer=*|--nred=*)
  NRED="${i#*=}"
  ;;
  -c=*|--combine=*)
  COMBINE="${i#*=}"
  ;;
  --)
  shift
  ;;
  *)
  # unknown option
  ;;
esac
done

if [ -z "$NRED" ]; then
  NRED="None"
fi
if [ -z "$COMBINE" ]; then
  COMBINE="true"
fi

I_DIR=`dirname $INPUT`
O_DIR=`dirname $OUTPUT`
O_FN=`basename $OUTPUT`
W_DIR=$O_DIR/.localmr_tmp_$O_FN

mrlog "Input Path: "$INPUT
mrlog "Output Path: "$OUTPUT
mrlog "Number of mapper: "$NMAP
mrlog "Number of reducer: "$NRED

# prepare
rm -rf $W_DIR
mkdir $W_DIR
rm -rf $OUTPUT

#===== MAP-ONLY TASK
if [ -z "$REDUCER" ]; then
  # Map
  cat $INPUT | split -d -n r/$NMAP - $W_DIR/m.in.
  for m_in_part in `ls $W_DIR/m.in.*`; do
    part_bn=`basename $m_in_part`
    part_id=${m_in_part##*.}
    map_proc="cat $W_DIR/$part_bn | $MAPPER > $W_DIR/part-$part_id"
    mrlog "Start Mapper-"$part_id
    sh -c "$map_proc" &
  done
  wait
  # Output
  if [ "$COMBINE" == "false" ]; then  # To a directory
    mkdir $OUTPUT
    mv $W_DIR/part-* $OUTPUT/
    rm -rf $OUTPUT/_SUCCESS; touch $OUTPUT/_SUCCESS
  else  # To single file
    cat $W_DIR/part-* > $OUTPUT
  fi
  # Cleanup
  rm -rf $W_DIR

#===== REDUCE-INVOLVED TASK
else
  # Map
  cat $INPUT | split -d -n r/$NMAP - $W_DIR/m.in.
  for m_in_part in `ls $W_DIR/m.in.*`; do
    part_bn=`basename $m_in_part`
    part_id=${m_in_part##*.}
    map_proc="cat $W_DIR/$part_bn | $MAPPER | awk --non-decimal-data
      -F'\t' -v nred=$NRED -v partid=$part_id -v wdir=$W_DIR
      '
      {
        bucket_id = int(get_hash(\$1)) % nred;
        bucket_id = sprintf(\"%02d\", bucket_id);
        print \$0 > wdir\"/m.out.\"partid\".\"bucket_id
      }
      function get_hash(fld) {
        cmd = sprintf(\"echo -n %s | md5sum\", fld);
        cmd | getline output;
        close(cmd)
        split(output, arr, \" \");
        return sprintf(\"%d\", \"0x\"substr(arr[1], 1, 10))
      }
      '
      "
    echo $map_proc > $W_DIR/m.exec.$part_id
    mrlog "Start Mapper-"$part_id"..."
    sh $W_DIR/m.exec.$part_id &
  done
  wait
  # Partition
  for bucket_id in `ls -1 $W_DIR/m.out.* | awk -F'.' '{print $NF}' | sort | uniq`; do
    mrlog "Start Shuffle bucket-"$bucket_id"..."
    (
      for bucket_file in `ls -1 $W_DIR/m.out.*.$bucket_id`; do
        bf_bn=`basename $bucket_file`
        sort -t$'\t' -k1,1 $W_DIR/$bf_bn > $W_DIR/${bf_bn}.s
      done;
      sort -t$'\t' -k1,1 -m $W_DIR/m.out.*.${bucket_id}.s > $W_DIR/r.in.$bucket_id
    ) &
  done
  wait
  # Reduce
  for r_in_part in `ls $W_DIR/r.in.*`; do
    part_bn=`basename $r_in_part`
    part_id=${r_in_part##*.}
    red_proc="cat $W_DIR/$part_bn | $REDUCER > $W_DIR/part-$part_id"
    mrlog "Start Reducer-"$part_id"..."
    sh -c "$red_proc" &
  done
  wait
  if [ "$COMBINE" == "false" ]; then  # To a directory
    mkdir $OUTPUT
    mv $W_DIR/part-* $OUTPUT/
    rm -rf $OUTPUT/_SUCCESS; touch $OUTPUT/_SUCCESS
  else  # To single file
    cat $W_DIR/part-* > $OUTPUT
  fi
  # Cleanup
  rm -rf $W_DIR
fi

mrlog "MR Job End! Output Path: "$OUTPUT
